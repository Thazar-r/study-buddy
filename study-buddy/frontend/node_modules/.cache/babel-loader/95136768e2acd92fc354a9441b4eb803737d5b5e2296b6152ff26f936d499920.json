{"ast":null,"code":"var _jsxFileName = \"/home/chemelil/study-buddy/study-buddy/frontend/src/components/StudyGroup.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StudyGroup = () => {\n  _s();\n  const [groups, setGroups] = useState([]); // State to hold all study groups\n  const [error, setError] = useState(''); // State to store error messages\n\n  useEffect(() => {\n    const fetchGroups = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/study-group', {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n        // Initialize showMembers property for each group\n        const groupsWithToggle = response.data.study_groups.map(group => ({\n          ...group,\n          showMembers: false // Initialize showMembers to false\n        }));\n        setGroups(groupsWithToggle); // Set the updated groups\n      } catch (error) {\n        console.error('Failed to fetch groups:', error);\n        setError('Failed to fetch study groups.');\n      }\n    };\n    fetchGroups();\n  }, []);\n  const joinGroup = async groupId => {\n    try {\n      const response = await axios.post(`http://localhost:5000/study-group/join`, {\n        groupId\n      }, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n\n      // Update the group with the new member\n      setGroups(prevGroups => prevGroups.map(group => {\n        if (group.id === groupId) {\n          return {\n            ...group,\n            members: response.data.members\n          }; // Assuming the response contains updated members\n        }\n        return group;\n      }));\n    } catch (error) {\n      console.error('Failed to join group:', error);\n      setError('Failed to join the study group.');\n    }\n  };\n  const toggleMembers = groupId => {\n    setGroups(prevGroups => prevGroups.map(group => {\n      if (group.id === groupId) {\n        return {\n          ...group,\n          showMembers: !group.showMembers\n        }; // Toggle visibility of members\n      }\n      return group;\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your Study Groups\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 23\n    }, this), \" \", groups.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: groups.map(group => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: group.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => joinGroup(group.id),\n          children: \"Join Group\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => toggleMembers(group.id),\n          children: group.showMembers ? 'Hide Members' : 'Show Members'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 29\n        }, this), group.showMembers && group.members && group.members.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Members:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: group.members.map(member => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: member.name\n            }, member.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 45\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 33\n        }, this)]\n      }, group.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No study groups found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }, this) // Message if there are no groups\n    ]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n};\n_s(StudyGroup, \"FSOqv7y35ZCeDrB3UBuWs6s8IvE=\");\n_c = StudyGroup;\nexport default StudyGroup;\nvar _c;\n$RefreshReg$(_c, \"StudyGroup\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","StudyGroup","_s","groups","setGroups","error","setError","fetchGroups","response","get","headers","Authorization","localStorage","getItem","groupsWithToggle","data","study_groups","map","group","showMembers","console","joinGroup","groupId","post","prevGroups","id","members","toggleMembers","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","length","name","onClick","member","_c","$RefreshReg$"],"sources":["/home/chemelil/study-buddy/study-buddy/frontend/src/components/StudyGroup.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nconst StudyGroup = () => {\n    const [groups, setGroups] = useState([]); // State to hold all study groups\n    const [error, setError] = useState(''); // State to store error messages\n\n    useEffect(() => {\n        const fetchGroups = async () => {\n            try {\n                const response = await axios.get('http://localhost:5000/study-group', {\n                    headers: { Authorization: `Bearer ${localStorage.getItem('token')}` }\n                });\n                // Initialize showMembers property for each group\n                const groupsWithToggle = response.data.study_groups.map(group => ({\n                    ...group,\n                    showMembers: false // Initialize showMembers to false\n                }));\n                setGroups(groupsWithToggle); // Set the updated groups\n            } catch (error) {\n                console.error('Failed to fetch groups:', error);\n                setError('Failed to fetch study groups.');\n            }\n        };\n    \n        fetchGroups();\n    }, []);\n    \n\n    const joinGroup = async (groupId) => {\n        try {\n            const response = await axios.post(`http://localhost:5000/study-group/join`, \n            { groupId }, \n            {\n                headers: { Authorization: `Bearer ${localStorage.getItem('token')}` }\n            });\n\n            // Update the group with the new member\n            setGroups((prevGroups) =>\n                prevGroups.map((group) => {\n                    if (group.id === groupId) {\n                        return { ...group, members: response.data.members }; // Assuming the response contains updated members\n                    }\n                    return group;\n                })\n            );\n        } catch (error) {\n            console.error('Failed to join group:', error);\n            setError('Failed to join the study group.');\n        }\n    };\n\n    const toggleMembers = (groupId) => {\n        setGroups((prevGroups) =>\n            prevGroups.map((group) => {\n                if (group.id === groupId) {\n                    return { ...group, showMembers: !group.showMembers }; // Toggle visibility of members\n                }\n                return group;\n            })\n        );\n    };\n\n    return (\n        <div>\n            <h2>Your Study Groups</h2>\n            {error && <p style={{ color: 'red' }}>{error}</p>} {/* Display error message if any */}\n            {groups.length > 0 ? (\n                <ul>\n                    {groups.map((group) => (\n                        <li key={group.id}>\n                            <h3>{group.name}</h3>\n                            <button onClick={() => joinGroup(group.id)}>Join Group</button>\n                            <button onClick={() => toggleMembers(group.id)}>\n                                {group.showMembers ? 'Hide Members' : 'Show Members'}\n                            </button>\n                            {group.showMembers && group.members && group.members.length > 0 && (\n                                <div>\n                                    <h4>Members:</h4>\n                                    <ul>\n                                        {group.members.map((member) => (\n                                            <li key={member.id}>{member.name}</li>\n                                        ))}\n                                    </ul>\n                                </div>\n                            )}\n                        </li>\n                    ))}\n                </ul>\n            ) : (\n                <p>No study groups found.</p> // Message if there are no groups\n            )}\n        </div>\n    );\n};\n\nexport default StudyGroup;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}