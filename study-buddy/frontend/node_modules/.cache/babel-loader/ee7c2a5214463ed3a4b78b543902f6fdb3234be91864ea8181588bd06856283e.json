{"ast":null,"code":"var _jsxFileName = \"/home/hesbon-limo/development/code/software-prep/phase-4/study-buddy/study-buddy/frontend/src/components/StudyGroup.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StudyGroup = () => {\n  _s();\n  const {\n    studyGroupId\n  } = useParams(); // Use useParams to access the groupId from the URL\n  const [group, setGroup] = useState({});\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [error, setError] = useState(''); // State to store error messages\n\n  useEffect(() => {\n    const fetchGroup = async () => {\n      try {\n        const response = await axios.get(`/api/groups/${studyGroupId}`, {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n        setGroup(response.data);\n      } catch (error) {\n        console.error('Failed to fetch group:', error);\n        setError('Failed to fetch group information.');\n      }\n    };\n    const fetchMessages = async () => {\n      try {\n        const response = await axios.get(`/api/groups/${studyGroupId}/messages`, {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n        setMessages(response.data);\n      } catch (error) {\n        console.error('Failed to fetch messages:', error);\n        setError('Failed to fetch messages.');\n      }\n    };\n    fetchGroup();\n    fetchMessages();\n  }, [studyGroupId]);\n  const handleSendMessage = async e => {\n    e.preventDefault();\n    try {\n      await axios.post(`/api/groups/${studyGroupId}/messages`, {\n        content: newMessage\n      }, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      setNewMessage('');\n      // Re-fetch messages after sending\n      const response = await axios.get(`/api/groups/${studyGroupId}/messages`, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      setMessages(response.data);\n    } catch (error) {\n      console.error('Failed to send message:', error);\n      setError('Failed to send message.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: group.name || 'Study Group'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), \" \", error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 23\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Messages\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: messages.map(msg => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: msg.content\n      }, msg.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSendMessage,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Type a message\",\n        value: newMessage,\n        onChange: e => setNewMessage(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n_s(StudyGroup, \"FXmtWfWj9HUsbcGdm7hjzdJEE5U=\", false, function () {\n  return [useParams];\n});\n_c = StudyGroup;\nexport default StudyGroup;\nvar _c;\n$RefreshReg$(_c, \"StudyGroup\");","map":{"version":3,"names":["React","useEffect","useState","axios","useParams","jsxDEV","_jsxDEV","StudyGroup","_s","studyGroupId","group","setGroup","messages","setMessages","newMessage","setNewMessage","error","setError","fetchGroup","response","get","headers","Authorization","localStorage","getItem","data","console","fetchMessages","handleSendMessage","e","preventDefault","post","content","children","name","fileName","_jsxFileName","lineNumber","columnNumber","style","color","map","msg","id","onSubmit","type","placeholder","value","onChange","target","_c","$RefreshReg$"],"sources":["/home/hesbon-limo/development/code/software-prep/phase-4/study-buddy/study-buddy/frontend/src/components/StudyGroup.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\n\nconst StudyGroup = () => {\n    const { studyGroupId } = useParams(); // Use useParams to access the groupId from the URL\n    const [group, setGroup] = useState({});\n    const [messages, setMessages] = useState([]);\n    const [newMessage, setNewMessage] = useState('');\n    const [error, setError] = useState(''); // State to store error messages\n\n    useEffect(() => {\n        const fetchGroup = async () => {\n            try {\n                const response = await axios.get(`/api/groups/${studyGroupId}`, {\n                    headers: { Authorization: `Bearer ${localStorage.getItem('token')}` }\n                });\n                setGroup(response.data);\n            } catch (error) {\n                console.error('Failed to fetch group:', error);\n                setError('Failed to fetch group information.');\n            }\n        };\n\n        const fetchMessages = async () => {\n            try {\n                const response = await axios.get(`/api/groups/${studyGroupId}/messages`, {\n                    headers: { Authorization: `Bearer ${localStorage.getItem('token')}` }\n                });\n                setMessages(response.data);\n            } catch (error) {\n                console.error('Failed to fetch messages:', error);\n                setError('Failed to fetch messages.');\n            }\n        };\n\n        fetchGroup();\n        fetchMessages();\n    }, [studyGroupId]);\n\n    const handleSendMessage = async (e) => {\n        e.preventDefault();\n        try {\n            await axios.post(`/api/groups/${studyGroupId}/messages`, { content: newMessage }, {\n                headers: { Authorization: `Bearer ${localStorage.getItem('token')}` }\n            });\n            setNewMessage('');\n            // Re-fetch messages after sending\n            const response = await axios.get(`/api/groups/${studyGroupId}/messages`, {\n                headers: { Authorization: `Bearer ${localStorage.getItem('token')}` }\n            });\n            setMessages(response.data);\n        } catch (error) {\n            console.error('Failed to send message:', error);\n            setError('Failed to send message.');\n        }\n    };\n\n    return (\n        <div>\n            <h2>{group.name || 'Study Group'}</h2> {/* Fallback title if group.name is not available */}\n            {error && <p style={{ color: 'red' }}>{error}</p>} {/* Display error message if any */}\n            <h3>Messages</h3>\n            <ul>\n                {messages.map((msg) => (\n                    <li key={msg.id}>{msg.content}</li>\n                ))}\n            </ul>\n            <form onSubmit={handleSendMessage}>\n                <input\n                    type=\"text\"\n                    placeholder=\"Type a message\"\n                    value={newMessage}\n                    onChange={(e) => setNewMessage(e.target.value)}\n                />\n                <button type=\"submit\">Send</button>\n            </form>\n        </div>\n    );\n};\n\nexport default StudyGroup;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}